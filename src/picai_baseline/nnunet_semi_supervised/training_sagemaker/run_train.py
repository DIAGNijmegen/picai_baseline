from sagemaker.local import LocalSession
from sagemaker.pytorch import PyTorch

sagemaker_session = LocalSession()
sagemaker_session.config = {'local': {'local_code': True}}

# Configure an MXNet Estimator (no training happens yet)
pytorch_estimator = PyTorch(
    entry_point='train.py',
    source_dir='/Users/joeranbosma/repos/picai_baseline/src/picai_baseline/nnunet_semi_supervised/training_sagemaker/code',
    role='SageMakerRole',
    instance_type='local',
    instance_count=1,
    framework_version='1.8.0',
    py_version='py36',
)

# Alternatively, you can train using data in your local file system. This is only supported in Local mode.
pytorch_estimator.fit({
    # 'images': 's3://rumc-picai-d-training-public/images/',
    # 'labels': 's3://rumc-picai-d-training-public/picai_labels/',
    'scripts': 'file:///Users/joeranbosma/repos/picai_baseline/src/picai_baseline/nnunet_semi_supervised/training_sagemaker/code/',
})

print(1)

# Deploys the model that was generated by fit() to local endpoint in a container
# pytorch_predictor = pytorch_estimator.deploy(initial_instance_count=1, instance_type='local')

# Serializes data and makes a prediction request to the local endpoint
# response = pytorch_predictor.predict(data)

# Tears down the endpoint container and deletes the corresponding endpoint configuration
# pytorch_predictor.delete_endpoint()

# Deletes the model
# pytorch_predictor.delete_model()
